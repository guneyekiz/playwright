name: CI and Deploy Allure and Playwright Reports to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npm install playwright@1.43.1

      - name: Install browsers
        run: npx playwright install

      - name: Clean Allure results and report directories
        run: rm -rf allure-results allure-report && mkdir allure-results allure-report

      - name: Run Playwright tests
        run: npx playwright test
        continue-on-error: true

      - name: Generate Allure results
        run: npx allure generate allure-results --clean -o allure-report

      - name: Verify Allure report generation
        run: ls -la allure-report

      - name: Generate timestamp
        id: timestamp
        run: echo "timestamp=$(date +%Y-%m-%d__%H%M%S)" >> $GITHUB_ENV

      - name: Create timestamped directories for reports
        run: mkdir -p reports/allure/${{ env.timestamp }} reports/playwright/${{ env.timestamp }}

      - name: Copy Playwright report to timestamped directory
        run: cp -r playwright-report/* reports/playwright/${{ env.timestamp }}

      - name: Copy Allure report to timestamped directory
        run: cp -r allure-report/* reports/allure/${{ env.timestamp }}

      - name: Verify copied Allure report
        run: ls -la reports/allure/${{ env.timestamp }}

      - name: Upload Playwright Report Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Playwright Report
          path: reports/playwright/${{ env.timestamp }}

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Allure Report
          path: reports/allure/${{ env.timestamp }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Stash package files to prevent checkout issues
        run: git stash push -- package-lock.json package.json

      - name: Fetch gh-pages branch
        run: git fetch origin gh-pages

      - name: Checkout gh-pages branch
        run: |
          git checkout gh-pages || git checkout --orphan gh-pages
          if [ "$(git rev-parse --abbrev-ref HEAD)" == "gh-pages" ]; then
            git reset --soft origin/gh-pages || true
          fi

      - name: Remove all except index.html and reports directory
        run: |
          sudo chmod -R u+w .
          find . -maxdepth 1 ! -name '.' ! -name '..' ! -name '.git' ! -name 'reports' ! -name 'index.html' -exec rm -rf {} + || true

      - name: Update Latest Allure Report
        run: |
          rm -rf reports/allure/latest
          cp -r reports/allure/${{ env.timestamp }} reports/allure/latest

      - name: Update Latest Playwright Report
        run: |
          rm -rf reports/playwright/latest
          cp -r reports/playwright/${{ env.timestamp }} reports/playwright/latest

      - name: Generate Report Links for index.html
        id: generate-links
        run: |
          allure_links=$(ls -d reports/allure/*/ | grep -v latest | sed 's|reports/allure/\(.*\)/|<li><a href="reports/allure/\1/index.html">\1</a></li>|')
          playwright_links=$(ls -d reports/playwright/*/ | grep -v latest | sed 's|reports/playwright/\(.*\)/|<li><a href="reports/playwright/\1/index.html">\1</a></li>|')
          echo "Allure Links: $allure_links"
          echo "Playwright Links: $playwright_links"
          echo "::set-output name=allure_links::$allure_links"
          echo "::set-output name=playwright_links::$playwright_links"

      - name: Debugging Step: Print Generated Links
        run: |
          echo "Allure Links: ${{ steps.generate-links.outputs.allure_links }}"
          echo "Playwright Links: ${{ steps.generate-links.outputs.playwright_links }}"

      - name: Create or Update Root index.html
        run: |
          echo '<!DOCTYPE html>
          <html>
          <head>
            <title>Reports</title>
          </head>
          <body>
            <h1>Reports</h1>
            <h2>Allure Reports</h2>
            <ul>
              <li><a href="reports/allure/latest/index.html">Latest Allure Report</a></li>
              '"${{ steps.generate-links.outputs.allure_links }}"'
            </ul>
            <h2>Playwright Reports</h2>
            <ul>
              <li><a href="reports/playwright/latest/index.html">Latest Playwright Report</a></li>
              '"${{ steps.generate-links.outputs.playwright_links }}"'
            </ul>
          </body>
          </html>' > index.html

      - name: Debugging Step: Print Updated index.html
        run: cat index.html

      - name: Commit Allure and Playwright reports to gh-pages
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "Deploy reports"
          else
            echo "No changes to commit to gh-pages."
          fi

      - name: Push changes using PAT
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN2 }}
        run: git push -fu https://${ACCESS_TOKEN}@github.com/guneyekiz/playwright gh-pages

      - name: Output Allure report URL
        run: |
         echo "Allure report URL: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/reports/allure/${{ env.timestamp }}/index.html"

      - name: Output Playwright report URL
        run: |
         echo "Playwright report URL: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/reports/playwright/${{ env.timestamp }}/index.html"
