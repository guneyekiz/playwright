name: CI and Deploy Allure Report to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write

    steps:
      - name: Checkout code and fetch gh-pages
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npm install playwright@1.43.1

      - name: Install browsers
        run: npx playwright install

      - name: Run Playwright tests
        run: npx playwright test
        continue-on-error: true

      - name: Change permissions for files
        run: sudo chmod -R u+w .

      - name: Load test report history
        run: |
          git fetch origin gh-pages
          git worktree prune
          git worktree remove gh-pages || true
          git worktree add gh-pages gh-pages

      - name: Build Allure report
        uses: simple-elf/allure-report-action@v1.9
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: "allure-history"
          allure_results: allure-results

      - name: Generate timestamp
        id: timestamp
        run: echo "timestamp=$(date +%Y-%m-%d__%H%M%S)" >> $GITHUB_ENV

      - name: Create timestamped directory for reports
        run: mkdir -p ${{ env.timestamp }}

      - name: Debug List playwright-report contents
        run: |
          echo "Contents of playwright-report:"
          ls -la playwright-report

      - name: Copy Playwright report to temporary directory
        run: |
          mkdir -p temp-report
          cp -r playwright-report/* temp-report

      - name: Debug List temp-report contents
        run: |
          echo "Contents of temp-report:"
          ls -la temp-report

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Ensure allure-history is writable
        run: sudo chmod -R 777 allure-history

      - name: Set permissions and stash all files to prevent checkout issues
        run: |
          sudo chmod -R 777 .
          git stash push --include-untracked

      - name: Checkout gh-pages branch
        run: |
          git checkout gh-pages || git checkout --orphan gh-pages
          if [ "$(git rev-parse --abbrev-ref HEAD)" == "gh-pages" ]; then
            git reset --soft origin/gh-pages || true
          fi



      - name: Remove all except index.html and timestamped directories
        run: |
          find . -maxdepth 1 ! -name '.' ! -name '..' ! -name '.git' ! -name '202*' ! -name 'index.html' -exec rm -rf {} + || true

      - name: Copy latest Allure report to root
        run: |
          if [ -d "allure-history" ] && [ "$(ls -A allure-history)" ]; then
            cp -r allure-history/* .
          fi

      - name: Copy new timestamped Playwright report to gh-pages
        run: |
          if [ -d "temp-report" ] && [ "$(ls -A temp-report)" ]; then
            cp -r temp-report/* ${{ env.timestamp }}
          else
            echo "No files to copy from temp-report"
          fi

      - name: Commit Allure report to gh-pages
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "Deploy Allure report"
          else
            echo "No changes to commit to gh-pages."
          fi

      - name: Push changes using PAT
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN2 }}
        run: git push -fu https://${ACCESS_TOKEN}@github.com/guneyekiz/playwright gh-pages

      - name: Output Allure report URL
        run: |
         echo "Allure report URL: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/allure-history"
