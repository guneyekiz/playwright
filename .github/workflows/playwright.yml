name: CI and Deploy to GitHub Pages  

on:   
  push:
    branches: [main]
  pull_request:
    branches: [main] 
  workflow_dispatch:  

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Install browsers
        run: npx playwright install

      - name: Run Playwright tests
        run: npx playwright test --reporter=html,allure-playwright
        continue-on-error: true

      - name: Generate Allure report
        run: npx allure generate --clean --output allure-report

      - name: Zip Allure report
        run: zip -r allure-report.zip allure-report/

      - name: Generate timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +%Y-%m-%d__%H%M%S)"

      - name: Create timestamped directory for reports
        run: mkdir -p ${{ steps.timestamp.outputs.timestamp }}

      - name: Zip Playwright report
        run: zip -r ${{ steps.timestamp.outputs.timestamp }}/playwright-report.zip playwright-report/

      - name: Upload Allure and Playwright reports as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: reports-${{ steps.timestamp.outputs.timestamp }}
          path: |
            ${{ steps.timestamp.outputs.timestamp }}/playwright-report.zip
            allure-report.zip

      - name: Stash package files to prevent checkout issues
        run: git stash --all

      - name: Fetch gh-pages branch
        run: git fetch origin gh-pages:gh-pages || true

      - name: Checkout gh-pages branch
        run: |
          git checkout gh-pages || git checkout --orphan gh-pages
          if [ "$(git rev-parse --abbrev-ref HEAD)" == "gh-pages" ]; then
            git reset --soft origin/gh-pages || true
          fi

      - name: Copy latest reports to root
        run: |
          cp -r ${{ steps.timestamp.outputs.timestamp }}/* .
          unzip allure-report.zip -d allure-report/

      - name: Commit and push updates
        run: |
          git add -A
          git commit -m "Deploy reports ${GITHUB_SHA}"
          git push

      - name: Output reports URLs
        run: |
          echo "Playwright report URL: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/playwright-report/"
          echo "Allure report URL: https://${{ github.repository_owner }}.github.io/${{ github.repository }}/allure-report/"
