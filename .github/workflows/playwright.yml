name: CI and Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: npm install playwright

      - name: Install browsers
        run: npx playwright install

      - name: Run Playwright tests
        run: npx playwright test --reporter=html

      - name: Upload HTML report as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: playwright-report
          path: playwright-report/

  prepare_gh_pages:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Check if gh-pages branch exists
        id: check_branch
        run: |
          if git ls-remote --heads origin gh-pages; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Create gh-pages branch if it doesn't exist
        if: steps.check_branch.outputs.exists == 'false'
        run: |
          git checkout --orphan gh-pages
          git reset --hard
          git commit --allow-empty -m "Initial gh-pages commit"
          git push origin gh-pages
          git checkout main

      - name: Checkout gh-pages branch
        run: git checkout gh-pages

      - name: Remove existing files
        run: |
          git rm -rf . || echo "No files to remove."
          mkdir -p reports
          touch reports/.gitkeep
          git add reports/.gitkeep
          git commit -m "Cleanup gh-pages" || echo "No changes to commit"
          git push origin gh-pages

  publish_report:
    needs: prepare_gh_pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Download zipped HTML report
        uses: actions/download-artifact@v2
        with:
          name: playwright-report
          path: .

      - name: Get the current date and time
        run: echo "NOW=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      - name: Move reports to gh-pages branch
        run: |
          mkdir -p reports/${{ env.NOW }}
          mv playwright-report/* reports/${{ env.NOW }}/
          git add reports/${{ env.NOW }}

      - name: Update index.html to redirect to the latest report
        run: |
          echo '<meta http-equiv="refresh" content="0; URL=reports/${{ env.NOW }}/index.html" />' > index.html
          git add index.html
          git commit -m "Deploy updated Playwright report for ${{ env.NOW }}"
          git push origin gh-pages
